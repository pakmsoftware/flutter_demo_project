// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_project/test/services/auth_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter_project/apis/user_api.dart' as _i5;
import 'package:flutter_project/db/collections/product.dart' as _i10;
import 'package:flutter_project/db/collections/product_cache.dart' as _i12;
import 'package:flutter_project/db/collections/user.dart' as _i8;
import 'package:flutter_project/db/repositories/product_cache_repository.dart'
    as _i11;
import 'package:flutter_project/db/repositories/product_repository.dart' as _i9;
import 'package:flutter_project/db/repositories/user_repository.dart' as _i7;
import 'package:flutter_project/models/user.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:isar/isar.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIsar_2 extends _i1.SmartFake implements _i4.Isar {
  _FakeIsar_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserApi extends _i1.Mock implements _i5.UserApi {
  MockUserApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get collectionName => (super.noSuchMethod(
        Invocation.getter(#collectionName),
        returnValue: '',
      ) as String);
  @override
  _i2.Client get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i2.Client);
  @override
  _i6.Future<_i3.User> addUser(_i3.User? userToAdd) => (super.noSuchMethod(
        Invocation.method(
          #addUser,
          [userToAdd],
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #addUser,
            [userToAdd],
          ),
        )),
      ) as _i6.Future<_i3.User>);
  @override
  _i6.Future<_i3.User> loginUser(_i3.User? userToLogin) => (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [userToLogin],
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #loginUser,
            [userToLogin],
          ),
        )),
      ) as _i6.Future<_i3.User>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getObjectsPaginated({
    int? pageSize = 10,
    int? skip = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getObjectsPaginated,
          [],
          {
            #pageSize: pageSize,
            #skip: skip,
          },
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<Map<String, dynamic>> postAddObject(
    Map<String, dynamic>? objectJson,
    String? postPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postAddObject,
          [
            objectJson,
            postPath,
          ],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i7.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Isar> get isar => (super.noSuchMethod(
        Invocation.getter(#isar),
        returnValue: _i6.Future<_i4.Isar>.value(_FakeIsar_2(
          this,
          Invocation.getter(#isar),
        )),
      ) as _i6.Future<_i4.Isar>);
  @override
  set isar(_i6.Future<_i4.Isar>? _isar) => super.noSuchMethod(
        Invocation.setter(
          #isar,
          _isar,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i8.User?> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i6.Future<_i8.User?>.value(),
      ) as _i6.Future<_i8.User?>);
  @override
  _i6.Future<bool> deleteUser() => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<void> addUser(_i8.User? user) => (super.noSuchMethod(
        Invocation.method(
          #addUser,
          [user],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [ProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepository extends _i1.Mock implements _i9.ProductRepository {
  MockProductRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Isar> get isar => (super.noSuchMethod(
        Invocation.getter(#isar),
        returnValue: _i6.Future<_i4.Isar>.value(_FakeIsar_2(
          this,
          Invocation.getter(#isar),
        )),
      ) as _i6.Future<_i4.Isar>);
  @override
  set isar(_i6.Future<_i4.Isar>? _isar) => super.noSuchMethod(
        Invocation.setter(
          #isar,
          _isar,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<List<_i10.Product>> getProductsByIds(List<int>? ids) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByIds,
          [ids],
        ),
        returnValue: _i6.Future<List<_i10.Product>>.value(<_i10.Product>[]),
      ) as _i6.Future<List<_i10.Product>>);
  @override
  _i6.Future<bool> insertProducts(List<_i10.Product>? products) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertProducts,
          [products],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> deleteAllProducts() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllProducts,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [ProductCacheRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductCacheRepository extends _i1.Mock
    implements _i11.ProductCacheRepository {
  MockProductCacheRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Isar> get isar => (super.noSuchMethod(
        Invocation.getter(#isar),
        returnValue: _i6.Future<_i4.Isar>.value(_FakeIsar_2(
          this,
          Invocation.getter(#isar),
        )),
      ) as _i6.Future<_i4.Isar>);
  @override
  set isar(_i6.Future<_i4.Isar>? _isar) => super.noSuchMethod(
        Invocation.setter(
          #isar,
          _isar,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i12.ProductCache?> getProductCache(String? cacheKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductCache,
          [cacheKey],
        ),
        returnValue: _i6.Future<_i12.ProductCache?>.value(),
      ) as _i6.Future<_i12.ProductCache?>);
  @override
  _i6.Future<bool> updateProductCache(_i12.ProductCache? productCache) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProductCache,
          [productCache],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> deleteAllProductCache() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllProductCache,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}
